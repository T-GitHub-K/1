.XLIST
IF1
%OUT MDOS.H_START
ENDIF
;****************************************
;*   	MS-DOS ¼½ÃÑº°Ù Ï¸Û’è‹`  	*
;*      MDOS.H  >>>>> Í¯ÀÞ°Ì§²Ù		* 
;*	1991.10.04			*
;****************************************
;
;     	INT 25H    
;
ABS_DISK_READ	MACRO	DISK,BUFFER,NUM_SECTORS,FIRST_SECTOR
		MOV	AL,DISK
		MOV	BX,OFFSET BUFFER
		MOV	CX,NUM_SECTORS
		MOV	DX,FIRST_SECTOR
		INT	25H
		POPF
		ENDM
;
;	INT 26H
;
ABS_DISK_WRITE	MACRO	DISK,BUFFER,NUM_SECTORS,FIRST_SECTOR
		MOV	AL,DISK
		MOV	BX,OFFSET BUFFER
		MOV	CX,NUM_SECTORS
		MOV	DX,FIRST_SECTOR
		INT	26H
		POPF
		ENDM
;
;	INT 27H
;
STAY_RESIDENT	MACRO	LAST_INSTRUC
		MOV	DX,OFFSET LAST_INSTRUC
		INC	DX
		INT 	27H
		ENDM
;
;	INT 21H Function Call
;
TERMINATE_PROGRAM	MACRO
			XOR	AH,AH
			INT	21H
			ENDM
;
;
READ_KBD_AND_ECHO	MACRO
			MOV	AH,01H
			INT 	21H
			ENDM
;
;
DISPLAY_CHAR	MACRO	CHARACTER
		MOV	DL,CHARACTER
		MOV	AH,02H
		INT	21H
		ENDM
;
;
AUX_INPUT	MACRO
		MOV	AH,03H
		INT	21H
		ENDM
;
;
AUX_OUTPUT	MACRO	CHARACTER
		MOV	DL,CHARACTER
		MOV	AH,04H
		INT	21H
		ENDM
;
;
PRINT_CHAR	MACRO	CHARACTER
		MOV	DL,CHARACTER
		MOV	AH,05H
		INT	21H
		ENDM
;
;
DIR_CONSOLE_IO	MACRO	SWITCH
		MOV	DL,SWITCH
		MOV	AH,06H
		INT	21H
		ENDM
;
;
DIR_CONSOLE_INPUT	MACRO
			MOV	AH,07H
			INT	21H
			ENDM
;
;
READ_KBD	MACRO
		MOV	AH,08H
		INT	21H
		ENDM
;
;
DISPLAY		MACRO	STRING
		MOV	DX,OFFSET STRING
		MOV	AH,09H
		INT	21H
		ENDM
;
;
GET_STRING	MACRO	LIMIT,STRING
		MOV	DX,OFFSET STRING
		MOV	STRING,LIMIT
		MOV	AH,0AH
		INT	21H
		ENDM
;
;
CHECK_KBD_STATUS	MACRO
			MOV	AH,0BH
			INT	21H
			ENDM
;
;
FLUSH_AND_READ_KBD	MACRO	SWITCH
			MOV	AL,SWITCH
			MOV	AH,0CH
			INT	21H
			ENDM
;
;
DISK_RESET	MACRO	
		MOV	AH,0DH
		INT	21H
		ENDM
;
;
SELECT_DISK	MACRO	DISK
		MOV	DL,DISK-'A'
		MOV	AH,0EH
		INT	21H
		ENDM
;
;
OPEN		MACRO	FCB
		MOV	DX,OFFSET FCB
		MOV	AH,0FH
		INT	21H
		ENDM
;
;
CLOSE		MACRO	FCB
		MOV	DX,OFFSET FCB
		MOV	AH,10H
		INT	21H
		ENDM
;
;
SERACH_FIRST	MACRO	FCB
		MOV	DX,OFFSET FCB
		MOV	AH,11H
		INT	21H
		ENDM
;
;
SERACH_NEXT 	MACRO	FCB
		MOV	DX,OFFSET FCB
		MOV	AH,12H
		INT	21H
		ENDM
;
;
DELETE		MACRO	FCB
		MOV	DX,OFFSET FCB
		MOV	AH,13H
		INT	21H
		ENDM
;
;
READ_SEQ	MACRO	FCB
		MOV	DX,OFFSET FCB
		MOV	AH,14H
		INT	21H
		ENDM
;
;
WRITE_SEQ	MACRO	FCB
		MOV	DX,OFFSET FCB
		MOV	AH,15H
		INT	21H
		ENDM
;
;
CREATE		MACRO	FCB
		MOV	DX,OFFSET FCB
		MOV	AH,16H
		INT	21H
		ENDM
;
;
RENAME		MACRO	FCB
		MOV	DX,OFFSET FCB
		MOV	AH,17H
		INT	21H
		ENDM
;
;
CURRENT_DISK	MACRO
		MOV	AH,19H
		INT	21H
		ENDM
;
;
SET_DTA		MACRO	BUFFER
		MOV	DX,OFFSET BUFFER
		MOV	AH,1AH
		INT	21H
		ENDM
;
;
DEF_DRIVE_DATA	MACRO
		PUSH	DS
		MOV	AH,1BH
		INT	21H
		MOV	AL,BYTE PTR[BX]
		POP	DS
		ENDM
;
;
DRIVE_DATA	MACRO	DRIVE
		PUSH	DS
		MOV	DL,DRIVE
		MOV	AH,1CH
		INT	21H
		MOV	AL,BYTE PTR[BX]
		POP	DS
		ENDM
;
;
READ_RAN	MACRO	FCB
		MOV	DX,OFFSET FCB
		MOV	AH,21H
		INT	21H
		ENDM
;
;
WRITE_RAN	MACRO	FCB
		MOV	DX,OFFSET FCB
		MOV	AH,22H
		INT	21H
		ENDM
;
;
FILE_SIZE	MACRO	FCB
		MOV	DX,OFFSET FCB
		MOV	AH,23H
		INT	21H
		ENDM
;
;
SET_RELATIVE_RECORD	MACRO	FCB
			MOV	DX,OFFSET FCB
			MOV	AH,24H
			INT	21H
			ENDM
;
;
SET_VECTOR	MACRO	INTERRUPT,SEG_ADDR,OFF_ADDR
		MOV	AL,INTERRUPT
		PUSH	DS
		MOV	AX,SEG_ADDR
		MOV	DS,AX
		MOV	DX,OFF_ADDR
		MOV	AH,25H
		INT	21H
		POP	DS
		ENDM
;
;
CREATE_PSP	MACRO	SEG_ADDR
		MOV	DX,SEG_ADDR
		MOV	AH,26H
		INT	21H
		ENDM
;
;
RAN_BLOCK_READ	MACRO	FCB,COUNT,REC_SIZE
		MOV	DX,OFFSET FCB
		MOV	CX,COUNT
		MOV	WORD PTR FCB[14],REC_SIZE
		MOV	AH,27H
		INT	21H
		ENDM
;
;
RAN_BLOCK_WRITE	MACRO	FCB,COUNT,REC_SIZE
		MOV	DX,OFFSET FCB
		MOV	CX,COUNT
		MOV	WORD PTR FCB[14],REC_SIZE
		MOV	AH,28H
		INT	21H
		ENDM
;
;
PARSE	MACRO	STRING,FCB
	MOV	SI,OFFSET STRING
	MOV	DI,OFFSET FCB
	PUSH	ES
	PUSH	DS
	POP	ES
	MOV	AL,0FH
	MOV	AH,29H
	INT	21H
	POP	ES
	ENDM
;
;
SET_DATA	MACRO	YEAR,MONTH,DAY
		MOV	CX,YEAR
		MOV	DH,MONTH
		MOV	DL,DAY
		MOV	AH,2BH
		INT	21H
		ENDM
;
;
GET_TIME	MACRO
		MOV	AH,2CH
		INT	21H
		ENDM
;
;
SET_TIME	MACRO	HOUR,MINUTES,SECONDS,HANDREDTHS
		MOV	CH,HOUR
		MOV	CL,MINUTES
		MOV	DH,SECONDS
		MOV	AH,2DH
		MOV	DL,HANDREDTHS
		INT	21H
		ENDM
;
;
VERIFY	MACRO	SWITCH
	MOV	AL,SWITCH
	MOV	AH,2EH
	MOV	DL,0
	INT	21H
	ENDM
;
;
GET_DTA	MACRO
	MOV	AH,2FH
	INT	21H
	ENDM
;
;
GET_VERSION	MACRO
		MOV	AH,30H
		INT	21H
		ENDM
;
;
KEEP_PROCESS	MACRO	RETURN_CODE,LAST_BYTE
		MOV	AL,RETURN_CODE
		MOV	DX,OFFSET LAST_BYTE
		MOV	CL,4
		SHR	DX,CL
		INC	DX
		MOV	AH,31H
		INT	21H
		ENDM
;
;
CTRL_C_CK	MACRO	ACTION,STATE
		MOV	AL,ACTION
		MOV	DL,STATE
		MOV	AH,33H
		INT	21H
		ENDM
;
;
GET_VECTOR	MACRO	INTERRUPT
		MOV	AL,INTERRUPT
		MOV	AH,35H
		INT	21H
		ENDM
;
;
GET_DISK_SPACE	MACRO	DRIVE
		MOV	DL,DRIVE
		MOV	AH,36H
		INT	21H
		ENDM
;
;
GET_COUNTRY	MACRO	COUNTRY,BUFFER
		LOCAL	GC_01
		MOV	DX,OFFSET BUFFER
		MOV	AX,COUNTRY
		CMP	AX,0FFH
		JI	GC_01
		MOV	AL,0FFH
		MOV	BX,COUNTRY
	GC_01:	MOV	AH,38H
		INT	21H
		ENDM
;
;
SET_COUNTRY	MACRO	COUNTRY
		LOCAL	SC_01
		MOV	DX,0FFFFH
		MOV	AX,COUNTRY
		CMP	AX,0FFH
		JI	SC_01
		MOV	AL,0FFH
		MOV	BX,COUNTRY
	SC_01:	MOV	AH,38H
		INT	21H
		ENDM
;
;
MAKE_DIR	MACRO	PATH
		MOV	DX,OFFSET PATH
		MOV	AH,39H
		INT	21H
		ENDM
;
;
REM_DIR		MACRO	PATH
		MOV	DX,OFFSET PATH
		MOV	AH,3AH
		INT	21H
		ENDM
;
;
CHANGE_DIR	MACRO	PATH
		MOV	DX,OFFSET PATH
		MOV	AH,3BH
		INT 	21H
		ENDM
;
;
CREATE_HANDLE	MACRO	PATH,ATTRIB
		MOV	DX,OFFSET PATH
		MOV	CX,ATTRIB
		MOV	AH,3CH
		INT	21H
		ENDM
;
;
OPEN_HANDLE	MACRO	PATH,ACCESS
		MOV	DX,OFFSET PATH
		MOV	AL,ACCESS
		MOV	AH,3DH
		INT	21H
		ENDM
;
;
CLOSE_HANDLE	MACRO	HANDLE
		MOV	BX,HANDLE
		MOV	AH,3EH
		INT	21H
		ENDM
;
;
READ_HANDLE	MACRO	HANDLE,BUFFER,BYTES
		MOV	BX,HANDLE
		MOV	DX,OFFSET BUFFER
		MOV	CX,BYTES
		MOV	AH,3FH
		INT	21H
		ENDM
;
;
WRITE_HANDLE	MACRO	HANDLE,DATA,BYTES
		MOV	BX,HANDLE
		MOV	DX,OFFSET DATA
		MOV	CX,BYTES
		MOV	AH,40H
		INT	21H
		ENDM
;
;
DELETE_ENTRY	MACRO	PATH
		MOV	DX,OFFSET PATH
		MOV	AH,41H
		INT	21H
		ENDM
;
;
MOVE_PTR	MACRO	HANDLE,HIGHT,LOW,METHOD
		MOV	BX,HANDLE
		MOV	CX,HIGHT
		MOV	DX,LOW
		MOV	AL,METHOD
		MOV	AH,42H
		INT	21H
		ENDM
;
;
CHANGE_ATTR	MACRO	PATH,ACTION,ATTRIB
		MOV	DX,OFFSET PATH
		MOV	AL,ACTION
		MOV	CX,ATTRIB
		MOV	AH,43H
		INT	21H
		ENDM
;
;
IOCTL_DATA	MACRO	CODE,HANDLE
		MOV	BX,HANDLE
		MOV	AL,CODE
		MOV	AH,44H
		INT	21H
		ENDM
;
;
IOCTL_CHAR	MACRO	CODE,HANDLE,BUFFER
		MOV	BX,HANDLE
		MOV	DX,OFFSET BUFFER
		MOV	AL,CODE
		MOV	AH,44H
		INT	21H
		ENDM
;
;
IOCTL_BLOCK	MACRO	CODE,DRIVE,BUFFER
		MOV	BL,DRIVE
		MOV	DX,OFFSET BUFFER
		MOV	AL,CODE
		MOV	AH,44H
		INT	21H
		ENDM
;
;
IOCTL_STATUS	MACRO	CODE,HANDLE
		MOV	BX,HANDLE
		MOV	AL,CODE
		MOV	AH,44H
		INT	21H
		ENDM
;
;
IOCTL_CHANGE	MACRO	DRIVE
		MOV	BL,DRIVE
		MOV	AL,08H
		MOV	AH,44H
		INT	21H
		ENDM
;
;
IOCTL_RETRY	MACRO	RETRIES,WAIT
		MOV	BX,RETIRES
		MOV	CX,WAIT
		MOV	AL,0BH
		MOV	AH,44H
		INT	21H
		ENDM
;
;
XDUP	MACRO	HANDLE
	MOV	BX,HANDLE
	MOV	AH,45H
	INT	21H
	ENDM
;
;
XDUP2	MACRO	HANDLE1,HANDLE2
	MOV	BX,HANDLE1
	MOV	CX,HANDLE2
	MOV	AH,46H
	INT	21H
	ENDM
;
;
GET_DIR	MACRO	DRIVE,BUFFER
	MOV	DL,DRIVE
	MOV	SI,OFFSET BUFFER
	MOV	AH,47H
	INT	21H
	ENDM
;
;
ALLOCATE_MEMORY	MACRO	BYTES
	MOV	BX,BYTES
	MOV	CL,4
	SHR	BX,CL
	INC	BX
	MOV	AH,48H
	INT	21H
	ENDM
;
;
FREE_MEMORY	MACRO	SEG_ADDR
		MOV	AX,SEG_ADDR
		MOV	ES,AX
		MOV	AH,49H
		INT	21H
		ENDM
;
;
SET_BLOCK	MACRO	LAST_BYTE
		MOV	BX,OFFSET LAST_BYTE
		MOV	CL,4
		SHR	BX,CL	
		ADD	BX,17
		MOV	AH,4AH
		INT	21H
		MOV	AX,BX
		SHL	AX,CL
		MOV	SP,AX
		MOV	BP,SP
		ENDM
;
;
EXEC	MACRO	PATH,COMMAND,PARMS
	MOV	DX,OFFSET OATH
	MOV	BX,OFFSET PARMS
	MOV	WORD PTR PARMS[02H],OFFSET COMMAND
	MOV	WORD PTR PARMS[04H],CS
	MOV	WORD PTR PARMS[06H],5CH
	MOV	WORD PTR PARMS[08H],ES
	MOV	WORD PTR PARMS[0AH],6CH
	MOV	WORD PTR PARMS[0CH],ES
	MOV	AL,0
	MOV	AH,4BH
	INT	21H
	ENDM
;
;
EXEC_OVL	MACRO	PATH,PARMS,SEG_ADDR
		MOV	DX,OFFSET PATH
		MOV	BX,OFFSET PARMS
		MOV	PARMS,SEG_ADDR
		MOV	PARMS[02H],SEG_ADDR
		MOV	AL,3
		MOV	AH,4BH
		INT	21H
		ENDM
;
;
END_PROCESS	MACRO	RETURN_CODE
		MOV	AL,RETURN_CODE
		MOV	AH,4CH
		INT	21H
		ENDM
;
;
GET_CODE	MACRO
		MOV	AH,4DH
		INT	21H
		ENDM
;
;
FIND_FIRST_FILE	MACRO	PATH,ATTRIB
		MOV	DX,OFFSET PATH
		MOV	CX,ATTRIB
		MOV	AH,4EH
		INT	21H
		ENDM
;
;
FIND_NEXT_FILE	MACRO
		MOV	AH,4FH
		INT	21H
		ENDM
;
;
GET_VERIFY	MACRO
		MOV	AH,54H
		INT	21H
		ENDM
;
;
RENAME_FILE	MACRO	OLD_PATH,NEW_PATH
		MOV	DX,OFFSET OLD_PATH
		MOV	PUSH	DS
		MOV	POP	ES
		MOV	DI,OFFSET NEW_PATH
		MOV	AH,56H
		INT	21H
		ENDM
;
;
GET_SET_DATE_TIME	MACRO	HANDLE,ACTION,TIME,DATE
			MOV	BX,HANDLE
			MOV	AL,ACTION
			MOV	CX,WORD PTR TIME
			MOV	DX,WORD PTR DATE
			MOV	AH,57H
			INT	21H
			ENDM
;
;
ALLOC_START	MACRO	CODE,STRATEGY
		MOV	BX,STRATEGY
		MOV	AL,CODE
		MOV	AH,58H
		INT	21H
		ENDM
;
;
GET_ERROR	MACRO
		MOV	AH,59H
		INT	21H
		ENDM
;
;
CREATE_TEMP	MACRO	PATHNAME,ATTRIB
		MOV	CX,ATTRIB
		MOV	DX,OFFSET PATHNAME
		MOV	AH,5AH
		INT	21H
		ENDM
;
;
CREATE_NEW	MACRO	PATHNAME,ATTRIB
		MOV	CX,ATTRIB
		MOV	DX,OFFSET PATHNAME
		MOV	AH,5BH
		INT	21H
		ENDM
;
;
LOCK	MACRO	HANDLE,START,BYTES
	MOV	BX,HANDLE
	MOV	CX,WORD PTR START
	MOV	DX,WORD PTR START+2
	MOV	SI,WORD PTR BYTES
	MOV	DI,WORD PTR BYTES+2
	MOV	AL,0
	MOV	AH,5CH
	INT	21H
	ENDM
;
;
UNLOCK	MACRO	HANDLE,START,BYTES
	MOV	BX,HANDLE
	MOV	CX,WORD PTR START
	MOV	DX,WORD PTR START+2
	MOV	SI,WORD PTR BYTES
	MOV	DI,WORD PTR BYTES+2
	MOV	AL,1
	MOV	AH,5CH
	INT	21H
	ENDM
;
;
GET_PSP	MACRO
	MOV	AH,62H
	INT	21H
	ENDM
;
;
IF1
%OUT MDOS.H_END
ENDIF
.LIST
