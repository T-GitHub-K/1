INCLUDE	MDOS.H
INCLUDE	STD.H

CODE	SEGMENT
	ASSUME	CS:CODE,DS:CODE,ES:CODE,SS:CODE


	ORG	80H
DTA	DB	80H	DUP(?)
	ORG	100H
	
START:
		MOV	SI,OFFSET DTA[0]
		CMP	BYTE PTR [SI],0
		JNE	NEXT
		JMP	PARA_ERR
NEXT:		INC	SI
		CALL	PARA_SET
		JNC	C_LINE0
		JMP	PARA_ERR
C_LINE0:
		MOV	DI,OFFSET PNAME
	REP	MOVSB
		MOV	AL,NUL
		STOSB

		OPEN_HANDLE	PNAME,0

		JC	OPENERR
		MOV	HANDLE_D,AX

		READ_HANDLE	HANDLE_D,PAT,620
		
		JC	READERR
		CMP	AX,0
		JE	CPYEND
		JMP	SET_FNT
;
PARA_ERR:
		MOV	DX,OFFSET MSGPARA
		JMP	SHORT	MSGOUT

OPENERR:
		MOV	DX,OFFSET MSGSER
		JMP	SHORT	MSGOUT

READERR:
		MOV	DX,OFFSET MSGRER
		JMP	SHORT	MSGOUT

CPYEND:
		CLOSE_HANDLE	HANDLE_D

		JC	CLSERR
		MOV	DX,OFFSET MSGEND
		JMP	SHORT	MSGOUT
;
CLSERR:		MOV	DX,OFFSET MSGCER
;

MSGOUT:
		MOV	AH,09H
		INT	21H
EXIT:

		END_PROCESS



SET_FNT:

	MOV	CL,0A7H
	MOV	AL,0
	MOV	DX,OFFSET PAT.PAT0+2
	PUSH	ES
	INT	80H
	POP	ES

	MOV	CL,0A7H
	MOV	AL,0
	MOV	DX,OFFSET PAT.PAT1+2
	PUSH	ES
	INT	80H
	POP	ES

	MOV	CL,0A7H
	MOV	AL,0
	MOV	DX,OFFSET PAT.PAT2+2
	PUSH	ES
	INT	80H
	POP	ES

	MOV	CL,0A7H
	MOV	AL,0
	MOV	DX,OFFSET PAT.PAT3+2
	PUSH	ES
	INT	80H
	POP	ES

	MOV	CL,0A7H
	MOV	AL,0
	MOV	DX,OFFSET PAT.PAT4+2
	PUSH	ES
	INT	80H
	POP	ES

	MOV	CL,0A7H
	MOV	AL,0
	MOV	DX,OFFSET PAT.PAT5+2
	PUSH	ES
	INT	80H
	POP	ES

	MOV	CL,0A7H
	MOV	AL,0
	MOV	DX,OFFSET PAT.PAT6+2
	PUSH	ES
	INT	80H
	POP	ES

	MOV	CL,0A7H
	MOV	AL,0
	MOV	DX,OFFSET PAT.PAT7+2
	PUSH	ES
	INT	80H
	POP	ES

	MOV	CL,0A7H
	MOV	AL,0
	MOV	DX,OFFSET PAT.PAT8+2
	PUSH	ES
	INT	80H
	POP	ES

	MOV	CL,0A7H
	MOV	AL,0
	MOV	DX,OFFSET PAT.PAT9+2
	PUSH	ES
	INT	80H
	POP	ES

	JMP	CPYEND

PARA_SET	PROC	NEAR
		MOV	CX,0
PARA1:
		LODSB
		CMP	AL,CR
		JE	PARA_END
		CMP	AL,SPC
		JE	PARA1
		CMP	AL,","
		JE	PARA1
		CMP	AL,TAB
		JE	PARA1
		
		PUSH	SI
PARA_CHR:
		INC	CX
		LODSB
		CMP	AL,CR
		JE	CHR_END
		CMP	AL,SPC
		JE	CHR_END
		CMP	AL,","
		JE	CHR_END
		CMP	AL,TAB
		JE	CHR_END
		JMP	SHORT	PARA_CHR

PARA_END:
		STC
		JMP	SHORT	PARA_EXIT
CHR_END:
		POP	SI
		DEC	SI
		CLC
PARA_EXIT:
		RET
PARA_SET	ENDP


HANDLE_D	DW	?

MSGSER		DB	CR,LF,LF,'본본File Not Found',CR,LF,'$'

MSGRER		DB	CR,LF,LF,'본본Read error',CR,LF,'$'

MSGCER		DB	CR,LF,LF,'본본Cannot Close',CR,LF,'$'

MSGEND		DB	CR,LF,LF,'본본Set FNT DATA',CR,LF,'$'

MSGPARA		DB	CR,LF,LF,"본본Parameter Err",CR,LF,"$"


PNAME	DB	63 DUP(0),0
;				62*10=620Byte
PAT_FILE	STRUC
	PAT0	DB	62 DUP(0)
	PAT1	DB	62 DUP(0)
	PAT2	DB	62 DUP(0)
	PAT3	DB	62 DUP(0)
	PAT4	DB	62 DUP(0)
	PAT5	DB	62 DUP(0)
	PAT6	DB	62 DUP(0)
	PAT7	DB	62 DUP(0)
	PAT8	DB	62 DUP(0)
	PAT9	DB	62 DUP(0)
PAT_FILE	ENDS

PAT	PAT_FILE	<,,,,,,,,,>	

CODE	ENDS
	END	START
